{"version":3,"sources":["assets/solarSystem/2k_sun.jpg","assets/solarSystem/2k_stars_milky_way.jpg","assets/solarSystem/2k_mercury.jpg","assets/solarSystem/2k_venus_surface.jpg","assets/solarSystem/2k_earth_daymap.jpg","assets/solarSystem/2k_mars.jpg","assets/solarSystem/2k_jupiter.jpg","assets/solarSystem/2k_saturn.jpg","assets/solarSystem/2k_uranus.jpg","assets/solarSystem/2k_neptune.jpg","components/Space.js","components/Sun.js","components/Planet.js","components/Planets.js","containers/App.js","serviceWorker.js","redux/modules/planet/planetStore.js","redux/reducer.js","redux/modules/planet/planetReducer.js","redux/modules/planet/planetTypes.js","redux/modules/space/spaceReducer.js","redux/modules/spacecraft/spaceCraftReducer.js","redux/store.js","index.js"],"names":["module","exports","Space","src","radius","side","this","props","children","React","Component","Sun","color","position","repeat","Planet","animation","split","map","item","ind","Number","join","Planets","state","mercurySpeed","planetReducer","planets","planet","key","name","toLowerCase","speed","connect","App","className","id","cosmos","alt","sun","mercury","venus","earth","mars","jupiter","saturn","uranus","neptune","Boolean","window","location","hostname","match","url","reducer","planetStore","action","type","console","log","spaceReducer","spaceCraftReducer","createStore","combineReducers","applyMiddleware","logger","thunk","promise","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ddf72d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2k_sun.7ce3a845.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_stars_milky_way.b5fc8274.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_mercury.6e282533.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_venus_surface.f3fc8992.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_earth_daymap.eec7a2f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_mars.b30dc37a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_jupiter.bac68e49.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_saturn.e758b798.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_uranus.0465fbad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2k_neptune.17c1bff0.jpg\";","import React from \"react\";\n\nexport default class Space extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <a-sky\n        src=\"#cosmos\"\n        radius={10000}\n        side=\"double\"\n        // animation=\"property: rotation; to: 0 0 360; loop: true; dur: 20000\"\n      >\n        {this.props.children}\n      </a-sky>\n    );\n  }aw\n}","import React from \"react\";\n\nexport default class Sun extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <a-sphere\n        src=\"#sun\"\n        color=\"#fff\"\n        position=\"0 0 0\"\n        repeat=\"5 5\"\n        radius={0.696340}\n        side=\"double\"\n      />\n    );\n  }\n}","import React from \"react\";\n\nexport default class Planet extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <a-entity animation={this.props.animation}>\n        <a-sphere\n          src={this.props.src}\n          color=\"#fff\"\n          position={this.props.position.split(' ').map((item, ind) => ind === 0 ? Number(item) + 0.696340 : item).join(' ')}\n          side=\"double\"\n          radius={this.props.radius}\n          animation=\"property: rotation; to: 0 360 0; loop: true; dur: 10000; easing: linear;\"\n        >\n        </a-sphere>\n      </a-entity>\n    );\n  }\n}","import React from \"react\";\nimport Planet from \"./Planet\";\nimport {connect} from \"react-redux\";\n\nclass Planets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: 2,\n      mercurySpeed: 47.87,\n    }\n  }\n\n  render() {\n    return (\n      <a-entity>\n        { this.props.planetReducer.planets.map((planet, key) => <Planet key={key} src={`#${planet.name.toLowerCase()}`} animation={`property: rotation; to: 0 0 360; loop: true; dur: ${this.state.mercurySpeed * 500000 / planet.speed}; easing: linear;`} position={planet.position} radius={planet.radius}/>) }\n      </a-entity>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    planetReducer: state.planetReducer\n  };\n};\n\nexport default connect(mapStateToProps)(Planets);","import React from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport sun from '../assets/solarSystem/2k_sun.jpg';\nimport cosmos from '../assets/solarSystem/2k_stars_milky_way.jpg';\nimport mercury from '../assets/solarSystem/2k_mercury.jpg';\nimport venus from '../assets/solarSystem/2k_venus_surface.jpg';\nimport earth from '../assets/solarSystem/2k_earth_daymap.jpg';\nimport mars from '../assets/solarSystem/2k_mars.jpg';\nimport jupiter from '../assets/solarSystem/2k_jupiter.jpg';\nimport saturn from '../assets/solarSystem/2k_saturn.jpg';\nimport uranus from '../assets/solarSystem/2k_uranus.jpg';\nimport neptune from '../assets/solarSystem/2k_neptune.jpg';\nimport Space from \"../components/Space\";\nimport Sun from \"../components/Sun\";\nimport Planets from \"../components/Planets\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <a-scene>\n          <a-assets>\n            <img id=\"cosmos\" src={cosmos}  alt=\"cosmos\"/>\n            <img id=\"sun\" src={sun}  alt=\"sun\"/>\n\n            <img id=\"mercury\" src={mercury}  alt=\"mercury\"/>\n            <img id=\"venus\" src={venus}  alt=\"venus\"/>\n            <img id=\"earth\" src={earth}  alt=\"earth\"/>\n            <img id=\"mars\" src={mars}  alt=\"mars\"/>\n            <img id=\"jupiter\" src={jupiter}  alt=\"jupiter\"/>\n            <img id=\"saturn\" src={saturn}  alt=\"saturn\"/>\n            <img id=\"uranus\" src={uranus}  alt=\"uranus\"/>\n            <img id=\"neptune\" src={neptune}  alt=\"neptune\"/>\n          </a-assets>\n\n          <Space>\n            <Sun />\n            <Planets />\n          </Space>\n\n          <a-camera position=\"0 0 7\">\n          </a-camera>\n        </a-scene>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    planetReducer: state.planetReducer,\n  };\n};\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  planets: [\n    {\n      name: 'Mercury',\n      url: '../assets/solarSystem/2k_mercury.jpg',\n      position: '0.058 0 0',\n      radius: 0.004879,\n      speed: 4787,\n    },\n    {\n      name: 'Venus',\n      url: '../assets/solarSystem/2k_venus_surface.jpg',\n      position: '0.108 0 0',\n      radius: 0.007521,\n      speed: 3502,\n    },\n    {\n      name: 'Earth',\n      url: '../assets/solarSystem/2k_earth_daymap.jpg',\n      position: '0.15 0 0',\n      radius: 0.012760,\n      speed: 2978,\n    },\n    {\n      name: 'Mars',\n      url: '../assets/solarSystem/2k_mars.jpg',\n      position: '0.228 0 0',\n      radius: 0.006787,\n      speed: 2407.7,\n    },\n    {\n      name: 'Jupiter',\n      url: '../assets/solarSystem/2k_jupiter.jpg',\n      position: '0.778 0 0',\n      radius: 0.428400,\n      speed: 1307,\n    },\n    {\n      name: 'Saturn',\n      url: '../assets/solarSystem/2k_saturn.jpg',\n      position: '1.4 0 0',\n      radius: 0.120500,\n      speed: 969,\n    },\n    {\n      name: 'Uranus',\n      url: '../assets/solarSystem/2k_uranus.jpg',\n      position: '2.9 0 0',\n      radius: 0.051120,\n      speed: 681,\n    },\n    {\n      name: 'Neptune',\n      url: '../assets/solarSystem/2k_neptune.jpg',\n      position: '4.5 0 0',\n      radius: 0.049530,\n      speed: 543,\n    },\n  ],\n};","import planetReducer from \"./modules/planet/planetReducer\";\nimport spaceReducer from \"./modules/space/spaceReducer\";\nimport spaceCraftReducer from \"./modules/spacecraft/spaceCraftReducer\";\n\nconst reducer = {\n  planetReducer,\n  spaceReducer,\n  spaceCraftReducer\n};\nexport default reducer;","import planetStore from \"./planetStore\";\nimport {CREATE_PLANET, DELETE_PLANET} from \"./planetTypes\";\n\nconst planetReducer = (state = { ...planetStore }, action) => {\n  switch (action.type) {\n    case `${CREATE_PLANET}_FULFILLED`:\n      console.log('create planet');\n      break;\n    case DELETE_PLANET:\n      console.log('delete planet');\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default planetReducer;","export const CREATE_PLANET = 'CREATE_PLANET';\nexport const DELETE_PLANET = 'DELETE_PLANET';","const spaceReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'CREATE_SPACE':\n      break;\n    case 'DELETE_SPACE':\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default spaceReducer;","const spaceCraftReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'CREATE_SPACECRAFT':\n      break;\n    case 'DELETE_SPACECRAFT':\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default spaceCraftReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport reducer from './reducer';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nexport default createStore(\n  combineReducers({...reducer}),\n  {},\n  applyMiddleware(logger, thunk, promise)\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}